services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    networks:
      - monitoring_network
    volumes:
      - ./prometheus-config:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=7d"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    user: "10001:10001"
    networks:
      - monitoring_network
    volumes:
      - ./loki-config:/etc/loki
      - loki-data:/loki
    command: -config.file=/etc/loki/loki.yml
    ports:
      - "3100:3100"

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    networks:
      - monitoring_network
    volumes:
      - /var/log:/var/log
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro  
      - ./promtail-config/promtail.yaml:/etc/promtail/config.yaml
    user: "root"
    command: -config.file=/etc/promtail/config.yaml

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    restart: unless-stopped
    networks:
      - monitoring_network
    volumes:
      - ./tempo-config:/etc/tempo
      - tempo-data:/var/tempo
    command: -config.file=/etc/tempo/tempo.yml
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "3200:3200" # Query API

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    #environment:
      #- GF_SERVER_ROOT_URL=https://monitor.prysm-labs.com
      #- GF_SERVER_SERVE_FROM_SUB_PATH=true=value not need with the subdomain
    networks:
      - monitoring_network
    volumes:
      - ./grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
  
  ### Docker metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    networks:
      - monitoring_network
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  ### Server metrics: NODE EXPORTER ###
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    networks:
      - monitoring_network
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

volumes:
  prometheus-data:
  loki-data:
  tempo-data:

networks:
  monitoring_network:
    external: true  # Use the pre-created network
